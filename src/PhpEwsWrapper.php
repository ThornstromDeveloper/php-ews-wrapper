<?php
namespace amirsanni\phpewswrapper;

/**
 * @author Amir Sanni <amirsanni@gmail.com>
 */

use jamesiarmes\PhpEws\Client;
use jamesiarmes\PhpEws\Request\CreateItemType;
use jamesiarmes\PhpEws\Enumeration\ResponseClassType;
use jamesiarmes\PhpEws\Enumeration\DistinguishedFolderIdNameType;
use jamesiarmes\PhpEws\ArrayType\NonEmptyArrayOfAllItemsType;
use jamesiarmes\PhpEws\ArrayType\ArrayOfRecipientsType;
use jamesiarmes\PhpEws\Type\MessageType;
use jamesiarmes\PhpEws\Type\EmailAddressType;
use jamesiarmes\PhpEws\Type\BodyType;
use jamesiarmes\PhpEws\Type\SingleRecipientType;
use jamesiarmes\PhpEws\Enumeration\MessageDispositionType;

class PhpEwsWrapper {
    protected $ews;//ews connection client
    protected $version;

    private $sender;
    private $msg_obj;//phpews message object
    private $request;
    private $response;

    /** CREATE/SEND MESSAGE */
    public $sender_name;
    public $recipient;
    public $recipient_name;
    public $cc;
    public $bcc;
    public $subject;
    public $message;
    public $attach;
    public $send_as_email;
    public $reply_to;
    
    /** MESSAGES */
    protected $messages_class_obj;
    public $limit;

    /*
    ********************************************************************************************************************************
    ********************************************************************************************************************************
    ********************************************************************************************************************************
    ********************************************************************************************************************************
    ********************************************************************************************************************************
    */

    public function __construct(string $email, string $password, string $server="outlook.office365.com", $version='2016'){
        try{
            $this->__setVersion($version);
            $this->ews = new Client($server, $email, $password, $this->version);
            $this->sender = $email;
        }

        catch(Exception $e){
            echo $e->getMessage();
        }
    }

    /*
    ********************************************************************************************************************************
    ********************************************************************************************************************************
    ********************************************************************************************************************************
    ********************************************************************************************************************************
    ********************************************************************************************************************************
    */

    private function __setVersion($version){
        switch($version){
            case 2007:
                $this->version = Client::VERSION_2007;
                break;

            case 2009:
                $this->version = Client::VERSION_2009;
                break;

            case 2010:
                $this->version = Client::VERSION_2010;
                break;

            case 2013:
                $this->version = Client::VERSION_2013;
                break;

            default:
                $this->version = Client::VERSION_2016;
        }
    }

    /*
    ********************************************************************************************************************************
    ********************************************************************************************************************************
    ********************************************************************************************************************************
    ********************************************************************************************************************************
    ********************************************************************************************************************************
    */

    private function __setAndCreateMessage($save_only=FALSE){
        $this->msg_obj = new MessageType();

        $this->__setSender();
        $this->__setSubject();
        $this->__setMsgBody();
        $this->__setItemType($save_only);
        $this->__setRecipient();
        $this->cc ? $this->__setCc() : "";
        $this->bcc ? $this->__setBcc() : "";
        $this->reply_to ? $this->__setReplyTo() : "";

        //ADD MESSAGE OBJECT TO REQUEST DATA
        $this->request->Items->Message = $this->msg_obj;

        //Create Item
        $this->response = $this->ews->CreateItem($this->request);
    }

    /*
    ********************************************************************************************************************************
    ********************************************************************************************************************************
    ********************************************************************************************************************************
    ********************************************************************************************************************************
    ********************************************************************************************************************************
    */

    private function __setSender(){
        $sender = new EmailAddressType();
        $sender->EmailAddress = $this->send_as_email ? $this->send_as_email : $this->sender;
        $sender->Name = $this->sender_name ? $this->sender_name : "";

        $this->msg_obj->From = new SingleRecipientType();
        $this->msg_obj->From->Mailbox = $sender;
    }

    /*
    ********************************************************************************************************************************
    ********************************************************************************************************************************
    ********************************************************************************************************************************
    ********************************************************************************************************************************
    ********************************************************************************************************************************
    */

    private function __setSubject(){
        $this->msg_obj->Subject = $this->subject;
    }

    /*
    ********************************************************************************************************************************
    ********************************************************************************************************************************
    ********************************************************************************************************************************
    ********************************************************************************************************************************
    ********************************************************************************************************************************
    */

    private function __setMsgBody(){
        $this->msg_obj->Body = new BodyType();
        $this->msg_obj->Body->BodyType = "HTML";
        $this->msg_obj->Body->_ = $this->message;
    }

    /*
    ********************************************************************************************************************************
    ********************************************************************************************************************************
    ********************************************************************************************************************************
    ********************************************************************************************************************************
    ********************************************************************************************************************************
    */

    private function __setItemType($save_only=FALSE){
        $this->request = new CreateItemType();
        $this->request->Items = new NonEmptyArrayOfAllItemsType();
        $this->request->MessageDisposition = $this->attach || $save_only ? MessageDispositionType::SAVE_ONLY : MessageDispositionType::SEND_AND_SAVE_COPY;
    }

    /*
    ********************************************************************************************************************************
    ********************************************************************************************************************************
    ********************************************************************************************************************************
    ********************************************************************************************************************************
    ********************************************************************************************************************************
    */

    private function __setCc(){
        $copy_email_addresses = new ArrayOfRecipientsType();

        if(is_array($this->cc)){
            for($i = 0; $i < count($this->cc); $i++){
                $copy_email_addresses->Mailbox[$i] = new EmailAddressType();
                $copy_email_addresses->Mailbox[$i]->EmailAddress = trim($this->cc[$i]);
            }
        }

        else{
            $copy_email_addresses->Mailbox[0] = new EmailAddressType();
            $copy_email_addresses->Mailbox[0]->EmailAddress = trim($this->cc);
        }

        //Add cc
        $this->msg_obj->CcRecipients = $copy_email_addresses;
    }

    /*
    ********************************************************************************************************************************
    ********************************************************************************************************************************
    ********************************************************************************************************************************
    ********************************************************************************************************************************
    ********************************************************************************************************************************
    */

    private function __setBcc(){
        $blind_copy_email_addresses = new ArrayOfRecipientsType();

        if(is_array($this->bcc)){
            for($i = 0; $i < count($this->bcc); $i++){
                $blind_copy_email_addresses->Mailbox[$i] = new EmailAddressType();
                $blind_copy_email_addresses->Mailbox[$i]->EmailAddress = trim($this->bcc[$i]);
            }
        }

        else{
            $blind_copy_email_addresses->Mailbox[0] = new EmailAddressType();
            $blind_copy_email_addresses->Mailbox[0]->EmailAddress = trim($this->bcc);
        }

        //Add blind copy
        $this->msg_obj->BccRecipients = $blind_copy_email_addresses;
    }

    /*
    ********************************************************************************************************************************
    ********************************************************************************************************************************
    ********************************************************************************************************************************
    ********************************************************************************************************************************
    ********************************************************************************************************************************
    */

    private function __setRecipient(){
        if(is_array($this->recipient)){
            foreach($this->recipient as $index=>$recipient){
                $email_recipients[$index] = new EmailAddressType();
                $email_recipients[$index]->EmailAddress = trim($recipient);
            }
        }

        else{
            $email_recipients[0] = new EmailAddressType();
            $email_recipients[0]->EmailAddress = trim($this->recipient);
            $email_recipients[0]->Name = trim($this->recipient_name);
        }

        //ADD RECIPIENT TO MESSAGE OBJECT
        $this->msg_obj->ToRecipients = $email_recipients;
    }

    /*
    ********************************************************************************************************************************
    ********************************************************************************************************************************
    ********************************************************************************************************************************
    ********************************************************************************************************************************
    ********************************************************************************************************************************
    */

    private function __setReplyTo(){
        $reply_to[0] = new EmailAddressType();
        $reply_to[0]->EmailAddress = trim($this->reply_to);

        //ADD reply_to TO MESSAGE OBJECT
        $this->msg_obj->ReplyTo = $reply_to;
    }

    /*
    ********************************************************************************************************************************
    ********************************************************************************************************************************
    ********************************************************************************************************************************
    ********************************************************************************************************************************
    ********************************************************************************************************************************
    */

    private function __getCreatedMessageId(){
        return $this->response->ResponseMessages->CreateItemResponseMessage[0]->Items->Message[0]->ItemId->Id;
    }

    /*
    ********************************************************************************************************************************
    ********************************************************************************************************************************
    ********************************************************************************************************************************
    ********************************************************************************************************************************
    ********************************************************************************************************************************
    */

    private function __sendMessage(){
        if($this->attach){
            $this->__instantiateMessagesClass();

            //add attachment and send
            $message_id = $this->__getCreatedMessageId();
            $change_key = $this->messages_class_obj->attachFiles($message_id, $this->attach);

            return $this->messages_class_obj->sendSavedMsg($message_id, $change_key);
        }

        else{
            return $this->response->ResponseMessages->CreateItemResponseMessage[0]->ResponseClass == ResponseClassType::SUCCESS;
        }
    }

    /*
    ********************************************************************************************************************************
    ********************************************************************************************************************************
    ********************************************************************************************************************************
    ********************************************************************************************************************************
    ********************************************************************************************************************************
    */

    private function __instantiateMessagesClass(){
        $this->messages_class_obj = new Messages($this->ews);

        $this->messages_class_obj->limit = $this->limit;
    }

    /*
    ********************************************************************************************************************************
    ********************************************************************************************************************************
    ********************************************************************************************************************************
    ********************************************************************************************************************************
    ********************************************************************************************************************************
    ********************************************************************************************************************************
    ********************************************************************************************************************************
    ********************************************************************************************************************************
    ********************************************************************************************************************************
    ********************************************************************************************************************************
    ********************************************************************************************************************************
    ********************************************************************************************************************************
    ********************************************************************************************************************************
    ********************************************************************************************************************************
    ********************************************************************************************************************************
    */

    public function send(){
        $this->__setAndCreateMessage();

        return $this->__sendMessage();
    }

    /*
    ********************************************************************************************************************************
    ********************************************************************************************************************************
    ********************************************************************************************************************************
    ********************************************************************************************************************************
    ********************************************************************************************************************************
    */

    public function createDraft(){
        $this->__setAndCreateMessage(TRUE);

        if($this->attach){
            //attach files to the created message
            $message_id = $this->__getCreatedMessageId();

            $this->__instantiateMessagesClass();

            $this->messages_class_obj->attachFiles($message_id, $this->attach);
        }
    }

    /*
    ********************************************************************************************************************************
    ********************************************************************************************************************************
    ********************************************************************************************************************************
    ********************************************************************************************************************************
    ********************************************************************************************************************************
    */

    /**
     * Send a message from your draft
     * @param string $message_id
     * @param string $change_key
     */
    public function sendMessage(string $message_id, string $change_key){
        $this->__instantiateMessagesClass();

        return $this->messages_class_obj->sendSavedMsg($message_id, $change_key);
    }

    /*
    ********************************************************************************************************************************
    ********************************************************************************************************************************
    ********************************************************************************************************************************
    ********************************************************************************************************************************
    ********************************************************************************************************************************
    */

    /**
     * Get messages from inbox
     * @param int $page_number
     */
    public function getInboxMessages(int $page_number=1){
        $this->__instantiateMessagesClass();
        
        return $this->messages_class_obj->getMessages($page_number, DistinguishedFolderIdNameType::INBOX);
    }

    /*
    ********************************************************************************************************************************
    ********************************************************************************************************************************
    ********************************************************************************************************************************
    ********************************************************************************************************************************
    ********************************************************************************************************************************
    */

    /**
     * Get unread messages from inbox
     * @param int $page_number
     */
    public function getUnreadMessages(int $page_number=1){
        $this->__instantiateMessagesClass();
        
        return $this->messages_class_obj->getUnreadMessages($page_number);
    }

    /*
    ********************************************************************************************************************************
    ********************************************************************************************************************************
    ********************************************************************************************************************************
    ********************************************************************************************************************************
    ********************************************************************************************************************************
    */

    /**
     * Get your sent items
     * @param int $page_number
     */
    public function getSentItems(int $page_number=1){
        $this->__instantiateMessagesClass();
        
        return $this->messages_class_obj->getMessages($page_number, DistinguishedFolderIdNameType::SENT);
    }

    /*
    ********************************************************************************************************************************
    ********************************************************************************************************************************
    ********************************************************************************************************************************
    ********************************************************************************************************************************
    ********************************************************************************************************************************
    */

    /**
     * Get messages from your draft
     * @param int $page_number
     */
    public function getDraftItems(int $page_number=1){
        $this->__instantiateMessagesClass();
        
        return $this->messages_class_obj->getMessages($page_number, DistinguishedFolderIdNameType::DRAFTS);
    }

    /*
    ********************************************************************************************************************************
    ********************************************************************************************************************************
    ********************************************************************************************************************************
    ********************************************************************************************************************************
    ********************************************************************************************************************************
    */

    /**
     * Get messages from your outbox
     * @param int $page_number
     */
    public function getOutboxItems(int $page_number=1){
        $this->__instantiateMessagesClass();
        
        return $this->messages_class_obj->getMessages($page_number, DistinguishedFolderIdNameType::OUTBOX);
    }

    /*
    ********************************************************************************************************************************
    ********************************************************************************************************************************
    ********************************************************************************************************************************
    ********************************************************************************************************************************
    ********************************************************************************************************************************
    */

    /**
     * Get messages from your favorites folder
     * @param int $page_number
     */
    public function getFavourites(int $page_number=1){
        $this->__instantiateMessagesClass();
        
        return $this->messages_class_obj->getMessages($page_number, DistinguishedFolderIdNameType::FAVORITES);
    }

    /*
    ********************************************************************************************************************************
    ********************************************************************************************************************************
    ********************************************************************************************************************************
    ********************************************************************************************************************************
    ********************************************************************************************************************************
    */

    /**
     * Get messages from your conversation history folder
     * @param int $page_number
     */
    public function getConversationHistory(int $page_number=1){
        $this->__instantiateMessagesClass();
        
        return $this->messages_class_obj->getMessages($page_number, DistinguishedFolderIdNameType::CONVERSATION_HISTORY);
    }

    /*
    ********************************************************************************************************************************
    ********************************************************************************************************************************
    ********************************************************************************************************************************
    ********************************************************************************************************************************
    ********************************************************************************************************************************
    */

    /**
     * Get messages from your junk folder
     * @param int $page_number
     */
    public function getJunkItems(int $page_number=1){
        $this->__instantiateMessagesClass();
        
        return $this->messages_class_obj->getMessages($page_number, DistinguishedFolderIdNameType::JUNK);
    }

    /*
    ********************************************************************************************************************************
    ********************************************************************************************************************************
    ********************************************************************************************************************************
    ********************************************************************************************************************************
    ********************************************************************************************************************************
    */

    /**
     * Get deleted messages
     * @param int $page_number
     */
    public function getDeletedMessages(int $page_number=1){
        $this->__instantiateMessagesClass();
        
        return $this->messages_class_obj->getMessages($page_number, DistinguishedFolderIdNameType::DELETED);
    }

    /*
    ********************************************************************************************************************************
    ********************************************************************************************************************************
    ********************************************************************************************************************************
    ********************************************************************************************************************************
    ********************************************************************************************************************************
    */

    /**
     * Get messages from your archived inbox
     * @param int $page_number
     */
    public function getArchivedMessages(int $page_number=1){
        $this->__instantiateMessagesClass();
        
        return $this->messages_class_obj->getMessages($page_number, DistinguishedFolderIdNameType::ARCHIVE_INBOX);
    }

    /*
    ********************************************************************************************************************************
    ********************************************************************************************************************************
    ********************************************************************************************************************************
    ********************************************************************************************************************************
    ********************************************************************************************************************************
    */

    /**
     * Get your tasks
     * @param int $page_number
     */
    public function getTasks(int $page_number=1){
        $this->__instantiateMessagesClass();
        
        return $this->messages_class_obj->getTasks($page_number);
    }

    /*
    ********************************************************************************************************************************
    ********************************************************************************************************************************
    ********************************************************************************************************************************
    ********************************************************************************************************************************
    ********************************************************************************************************************************
    */

    /**
     * Get your contacts
     * @param int $page_number
     */
    public function getContacts(int $page_number=1){
        $this->__instantiateMessagesClass();
        
        return $this->messages_class_obj->getContacts($page_number);
    }

    /*
    ********************************************************************************************************************************
    ********************************************************************************************************************************
    ********************************************************************************************************************************
    ********************************************************************************************************************************
    ********************************************************************************************************************************
    */

    /**
     * Get list of folders
     */
    public function getFolders(){
        $this->__instantiateMessagesClass();
        
        return $this->messages_class_obj->getFolders();
    }

    /*
    ********************************************************************************************************************************
    ********************************************************************************************************************************
    ********************************************************************************************************************************
    ********************************************************************************************************************************
    ********************************************************************************************************************************
    */

    /**
     * Mark message as read
     * @param string $message_id
     * @param string $change_key
     */
    public function markAsRead(string $message_id, string $change_key){
        $this->__instantiateMessagesClass();

        return $this->messages_class_obj->updateMessageReadStatus($message_id, $change_key, 'read');
    }

    /*
    ********************************************************************************************************************************
    ********************************************************************************************************************************
    ********************************************************************************************************************************
    ********************************************************************************************************************************
    ********************************************************************************************************************************
    */

    /**
     * Mark message as unread
     * @param string $message_id
     * @param string $change_key
     */
    public function markAsUnread(string $message_id, string $change_key){
        $this->__instantiateMessagesClass();

        return $this->messages_class_obj->updateMessageReadStatus($message_id, $change_key, 'unread');
    }

    /*
    ********************************************************************************************************************************
    ********************************************************************************************************************************
    ********************************************************************************************************************************
    ********************************************************************************************************************************
    ********************************************************************************************************************************
    */

    /**
     * Delete message
     * @param string $message_id
     */
    public function deleteMessage(string $message_id){
        $this->__instantiateMessagesClass();

        return $this->messages_class_obj->deleteMessage($message_id);
    }
}
